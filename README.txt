BWT search software (version 1.0) written by C.Geng.

1. Structure of index file

In the first, a description called checkpoint should be introduced. The checkpoint in this software is a kind of list that records the time of each symbol in a data block read from bwt file. In this software, the block size is 2048 bytes. That means once 2048 bytes of data is read from bwt file, then count the time of each symbol, plus the times in the lastcheck point and write the new checkpoint into index file. If the last block or the bwt file is less than 2048 bytes, no checkpoint will be recorded. In the last of the index file, the number of blocks will be recorded.

2. How to work in the software

In the software, backward search algorithm is used to search pattern. Backward search is based on FL transition. In BWT matrix, the first and the last column are call F and L respectively. For an explicit symbol, if we get its position in F and find the symbol with the same position in L, the symbol is the previous of the symbol in F. That is FL transition, which means the symbols before an explicit symbol can be found by FL transition. Futhermore, for a kind of symbols, it has the same order in both F and L. However, the most time consuming process in FL transition is to count the occuracne number for an explicit symbol at an explicit position. Hence, an index file contains checkpoints described above is necessary. We divide the position by block size to get the number of block. Then read the record from index file to get the nearest statistic data of the symbol we want to search. However, this is not the real occurance number for this symbol, we need read a smaller block of data from bwt file and count the time of the symbol in this block. The block size is the remainder after previous division. Finally, the sum of the numbers from index file and block statistics is the occurace number we need. This is much more faster than doing statistic on the bwt file especially when the position number is extremely big. Because symbols in F is sorted lexicographically, in order to find the position in F, we need cout the occurance number of symbols which have prior position in lexicograph and then add the occurance number in L. The sum is the position of the symbol in F.

Another problem is how to get F column. Actually, F column is a kind of statistics of all symbols which appear in the original file. Therefore, when we complete the statistics of checkpoints, the F column is the checkpoint of last block. However, this is not completely correct because the whole file cannot always be divided by 2048 exaclty. Hence, we need to count the last block which has the smaller block size in bwt file and add the checkpoint of the last standard block. 
